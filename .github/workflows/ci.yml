name: Rust

on:
  push:
    branches: ["main"]
    tags:
      - "v*.*.*" # eg v1.0.0, v2.1.5

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        BUILD_TARGET: [release]
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    outputs:
      release_built: ${{ steps.set-output.outputs.release_built }}

    steps:
      - name: Clone Repo
        uses: actions/checkout@v5
      - name: Restore Cargo Cache
        uses: actions/cache@v4
        continue-on-error: true
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Temporarily modify the rust toolchain version
        run: rustup override set stable
      - name: Output rust version for educational purposes
        run: rustup --version

      - name: Build binaries in "${{ matrix.BUILD_TARGET }}" mode
        run: cargo build --profile ${{ matrix.BUILD_TARGET }}
      - name: Run tests in "${{ matrix.BUILD_TARGET }}" mode
        run: cargo test --profile ${{ matrix.BUILD_TARGET }}

      - name: Copy Default Patch Sets
        shell: bash

        run: |
          mkdir -p target/${{ matrix.BUILD_TARGET }}/data/
          cp example/ghoulies.json target/${{ matrix.BUILD_TARGET }}/data/

      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: xbpatch-${{ runner.os }}
          path: |
            target/${{ matrix.BUILD_TARGET }}/xbpatch-cli
            target/${{ matrix.BUILD_TARGET }}/xbpatch-cli.exe
            target/${{ matrix.BUILD_TARGET }}/xbpatch-gui
            target/${{ matrix.BUILD_TARGET }}/xbpatch-gui.exe
            target/${{ matrix.BUILD_TARGET }}/data/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Create New Release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Download Build Artifacts
        uses: actions/download-artifact@v5.0.0
        with:
          path: ~/artifacts

      - name: Upload linux artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ~/artifacts/xbpatch-Linux.zip
          asset_name: xbpatch-linux-${{ github.ref_name }}.zip
          asset_content_type: application/gzip

      - name: Upload Windows artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ~/artifacts/xbpatch-Windows.zip
          asset_name: xbpatch-windows-${{ github.ref_name }}.zip
          asset_content_type: application/zip
